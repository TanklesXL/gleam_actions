name: Release

on:
  workflow_call:
    inputs:
      gleam_version:
        type: string
        required: true
        default: "1"
      erlang_version:
        type: string
        required: true
        default: "26"
      test_erlang:
        type: boolean
        default: true
      test_node:
        type: boolean
        default: true
    secrets:
      HEXPM_USER:
        description: hex.pm username
        required: false
      HEXPM_PASS:
        description: hex.pm password
        required: false
      HEXPM_API_KEY:
        description: hex.pm API key
        required: false

jobs:
  test:
    uses: ./.github/workflows/test.yaml
    with:
      erlang_version: ${{inputs.erlang_version}}
      gleam_version: ${{inputs.gleam_version}}
      test_erlang: ${{inputs.test_erlang}}
      test_node: ${{inputs.test_node}}

  version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: cargo install tomlq
      - run: |
          if [ "v$(tq version -f gleam.toml)" == "${{ github.ref_name }}" ]; then
            exit 0
          fi
          echo "tag does not match version in gleam.toml, refusing to publish"
          exit 1

  release-gh:
    runs-on: ubuntu-latest
    needs:
      - test
      - version
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Release
        uses: softprops/action-gh-release@v1

  release-hex:
    runs-on: ubuntu-latest
    needs:
      - test
      - version
    steps:
      - uses: actions/checkout@v4
      - uses: TanklesXL/gleam_actions/.github/actions/install_gleam@main
        with:
          erlang_version: ${{ inputs.erlang_version }}
          gleam_version: ${{ inputs.gleam_version }}
      - uses: TanklesXL/gleam_actions/.github/actions/deps_cache@main
      - uses: TanklesXL/gleam_actions/.github/actions/hex_publish@main
        with:
          hex_user: ${{ secrets.HEXPM_USER }}
          hex_pass: ${{ secrets.HEXPM_PASS }}
          hex_key: ${{ secrets.HEXPM_API_KEY }}
